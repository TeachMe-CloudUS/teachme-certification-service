[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "teachme-certification-service"
version = "0.1.0"
description = "Certification Service for TeachMe"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "Julian Rotter, Lydia Payer", email = "julian.rotter@student.uibk.ac.at"}
]
keywords = ["certification", "service", "teachme"]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Development Status :: 3 - Alpha",
    "Framework :: Flask",
]

dependencies = [
    "Flask==3.0.3",
    "pyHanko==0.25.3",
    "pyhanko-certvalidator==0.26.5",
    "cryptography==43.0.3",
    "oscrypto==1.3.0",
    "qrcode==8.0",
    "reportlab==4.2.5",
    "python-dotenv==1.0.0",
    "pymongo",
    "confluent-kafka",
    "azure-storage-blob",
    "azure-identity",
    "jsonschema>=4.17.3",
    "prometheus-client>=0.17.1"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pylint",
]

[project.scripts]
certification-service = "certification_service.app:main"

[tool.setuptools]
packages = [
    "certification_service", 
    "certification_service.kafka", 
    "certification_service.models", 
    "certification_service.routes"
]

[tool.setuptools.packages.find]
where = ["."]
include = ["certification_service*"]
recursive = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.pylint.master]
ignore-patterns = "test_*.py"

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "R0903",  # too-few-public-methods
]